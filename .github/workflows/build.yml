name: Build and Release

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        # 只安装核心依赖，避免GUI相关依赖
        pip install requests>=2.25.0 httpx>=0.24.0
    
    - name: Run basic tests
      run: |
        # 只运行最小化的测试，避免GUI依赖
        pytest tests/test_minimal.py -v

  build-linux:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Check available packages
      run: |
        echo "=== Checking available WebKit packages ==="
        apt-cache search webkit2gtk || true
        echo "=== Checking available GObject packages ==="
        apt-cache search gir1.2-webkit || true
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        
        # 安装基础开发工具
        sudo apt-get install -y \
          pkg-config \
          build-essential \
          libgirepository1.0-dev \
          libcairo2-dev \
          libcairo-gobject2-dev \
          libpixman-1-dev \
          libpng-dev \
          libjpeg-dev \
          libfreetype6-dev \
          libpango1.0-dev \
          libcairo-gobject2 \
          libgirepository-1.0-1 \
          libgtk-3-0 \
          libpango-1.0-0
        
        # 尝试安装WebKit 4.1，如果失败则尝试4.0
        sudo apt-get install -y \
          libwebkit2gtk-4.1-dev \
          gir1.2-webkit2-4.1 \
          libwebkit2gtk-4.1-0 || \
        sudo apt-get install -y \
          libwebkit2gtk-4.0-dev \
          gir1.2-webkit2-4.0 \
          libwebkit2gtk-4.0-37
        
        # 安装音频相关依赖
        sudo apt-get install -y \
          libasound2-dev \
          libpulse-dev \
          portaudio19-dev \
          libgstreamer1.0-dev \
          libgstreamer-plugins-base1.0-dev || true
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install briefcase
        pip install toga>=0.4.0 requests>=2.25.0 httpx>=0.24.0
        # 安装音频相关的Python包（用于Linux构建）
        pip install pygame>=2.0.0 mutagen>=1.45.0 || true
    

    - name: Build Linux app
      run: |
        echo "=== Starting Linux build process ==="
        echo "Python version: $(python --version)"
        echo "Briefcase version: $(python -m briefcase --version)"
        
        # 尝试构建
        python -m briefcase build linux || {
          echo "=== Build failed, checking logs ==="
          find . -name "*.log" -type f -exec echo "=== {} ===" \; -exec cat {} \; || true
          exit 1
        }
        
        # 尝试打包
        python -m briefcase package linux || {
          echo "=== Package failed, checking logs ==="
          find . -name "*.log" -type f -exec echo "=== {} ===" \; -exec cat {} \; || true
          exit 1
        }
        
        echo "=== Build completed successfully ==="
        ls -la dist/ || true
    
    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: dist/*.deb

  build-windows:
    needs: test
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install briefcase
        pip install toga>=0.4.0 requests>=2.25.0 httpx>=0.24.0
    
    - name: Build Windows app
      run: |
        python -m briefcase build windows
        python -m briefcase package windows
    
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: dist/*.msi

  build-macos:
    needs: test
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install briefcase
        pip install toga>=0.4.0 requests>=2.25.0 httpx>=0.24.0
    
    - name: Build macOS app
      run: |
        python -m briefcase build macOS
        # 使用 ad-hoc 签名（适用于开发和测试），不需要交互输入
        python -m briefcase package macOS --adhoc-sign --no-input
    
    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: dist/*.dmg

  build-ios:
    needs: test
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install briefcase
        pip install toga>=0.4.0 requests>=2.25.0 httpx>=0.24.0
    
    - name: Create iOS app
      run: |
        python -m briefcase create iOS
    
    - name: Build iOS app
      run: |
        python -m briefcase build iOS
      continue-on-error: true  # iOS构建可能因为缺少证书而失败
    
    - name: Upload iOS artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: ios-build
        path: |
          iOS/
          build/
        retention-days: 7

  build-android:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Check available Cairo packages
      run: |
        echo "=== Checking available Cairo packages ==="
        apt-cache search cairo | grep -i gobject || true
        apt-cache search libcairo || true
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          pkg-config \
          build-essential \
          libgirepository1.0-dev \
          libcairo2-dev \
          libpixman-1-dev \
          libpng-dev \
          libjpeg-dev \
          libfreetype6-dev
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        log-accepted-android-sdk-licenses: false

    - name: Accept Android SDK licenses
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true

    - name: Install Android SDK components
      run: |
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
          "platforms;android-33" \
          "build-tools;33.0.0" \
          "cmake;3.22.1" \
          "ndk;25.1.8937393"

    - name: Set Android environment variables
      run: |
        echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_NDK_ROOT=$ANDROID_HOME/ndk/25.1.8937393" >> $GITHUB_ENV

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install briefcase
        pip install toga>=0.4.0 requests>=2.25.0 httpx>=0.24.0
    
    - name: Create Android app
      run: |
        python -m briefcase create android
    
    - name: Build Android app
      run: |
        python -m briefcase build android
      continue-on-error: true  # Android构建可能因为环境配置而失败
    
    - name: Package Android app
      run: |
        python -m briefcase package android
      continue-on-error: true
    
    - name: Upload Android artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: android-build
        path: |
          android/
          dist/*.apk
        retention-days: 7

  # 发布开发版本（推送到 main/master 分支时）
  publish-dev:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    needs: [build-linux, build-windows, build-macos, build-ios, build-android]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Create development release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: dev-${{ github.sha }}
        name: Development Build ${{ github.sha }}
        body: |
          Development build from commit ${{ github.sha }}
          
          This is an automated development release. Use at your own risk.
          
          **📦 Available Downloads:**
          - **Desktop**: Linux (.deb), Windows (.msi), macOS (.dmg)
          - **Mobile**: iOS (source/project files), Android (.apk if available)
          
          **Note**: Mobile builds may not contain signed packages and are for development/testing purposes.
          
          **Changes:**
          ${{ github.event.head_commit.message }}
        files: |
          artifacts/linux-build/*
          artifacts/windows-build/*
          artifacts/macos-build/*
          artifacts/ios-build/*
          artifacts/android-build/*
        prerelease: true
        token: ${{ secrets.GITHUB_TOKEN }}

  # 发布正式版本（创建 tag 时）
  publish-release:
    if: github.event_name == 'release'
    needs: [build-linux, build-windows, build-macos, build-ios, build-android]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/linux-build/*
          artifacts/windows-build/*
          artifacts/macos-build/*
          artifacts/ios-build/*
          artifacts/android-build/*
        token: ${{ secrets.GITHUB_TOKEN }}
